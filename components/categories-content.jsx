"use client";

import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Plus } from "lucide-react";
import { AddVariantDialog } from "./add-verient-dialog";
import DashboardDetails from "./dashboard-details";

const stats = [
  {
    label: "Total Revenue",
    value: "$45,904",
    change: "+8%",
    note:"vs last week",
    changeType:"positive"
  },
  {
    label: "Overall Rating",
    value: "4.3",
    change: "45 Reviews",
    changeType: "neutral",
  },
  {
    label: "Money generated by the provider",
    value: "$145,674",
    change: "+12%",
    note:"vs last week",
    changeType:"positive"
  },
  {
    label: "Commission earned by Hanat",
    value: "$1200",
    change: "+12%",
    note:"vs last week",
    changeType:"negative"
  },
];

export default function CategoriesContent() {
  const [isAddVariantOpen, setIsAddVariantOpen] = useState(false);
  const [variants, setVariants] = useState([
    {
      type: "multiple-choice",
      options: ["Kitchen", "Office Space", "Bathroom"],
    },
  ]);

  const [activeTab, setActiveTab] = useState("edit-category");
  const handleAddVariant = (newVariant) => {
    setVariants([newVariant]);
    console.log("_______", newVariant);
    setIsAddVariantOpen(false);
  };
  return (
    <div className="p-7">
      {/* Tab Navigation */}
      <div className="border-b border-gray-200 mb-6">
        <div className="flex">
          <button
            onClick={() => setActiveTab("edit-category")}
            className={`px-4 py-2 text-sm font-medium relative ${
              activeTab === "edit-category"
                ? "text-black"
                : "text-gray-500 hover:text-gray-700"
            }`}
          >
            Edit Category
            {activeTab === "edit-category" && (
              <div className="absolute bottom-0 left-0 right-0 h-[1px] bg-black" />
            )}
          </button>
          <button
            onClick={() => setActiveTab("sub-category")}
            className={`px-4 py-2 text-sm font-medium relative ${
              activeTab === "sub-category"
                ? "text-black"
                : "text-gray-500 hover:text-gray-700"
            }`}
          >
            Sub-Category
            {activeTab === "sub-category" && (
              <div className="absolute bottom-0 left-0 right-0 h-[1px] bg-black" />
            )}
          </button>
        </div>
      </div>

      {activeTab === "edit-category" ? (
        <div className="space-y-6 w-[50%]">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Category Name
            </label>
            <Input
              placeholder="Enter Category name"
              className="border-gray-300"
            />
          </div>
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-1">
              Description
            </label>
            <Textarea
              placeholder="Enter Description"
              className="min-h-[200px] border-gray-300"
            />
          </div>
          <Button
            variant="ghost"
            className="text-gray-500 hover:bg-transparent hover:text-gray-700 p-0 h-auto font-normal"
          >
            <Plus className="h-4 w-4 mr-2" />
            Add Custom Field
          </Button>
          <div className="flex justify-end space-x-3 pt-4">
            <Button variant="outline">Cancel</Button>
            <Button className="bg-gray-900 text-white">Save Changes</Button>
          </div>
        </div>
      ) : (
        <div>
          {/* Stats Section for Sub-Category */}
          <DashboardDetails stats={stats} />
          <div>
            <h2 className="text-sm font-medium mb-4">Sub-category list</h2>
            <div className="space-y-6 w-[50%]">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  Sub-Category Name
                </label>
                <Input defaultValue="Kitchen" className="border-gray-300" />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  Description
                </label>
                <Textarea
                  placeholder="Enter Description"
                  className="min-h-[120px] border-gray-300"
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  Add Sub Sub-Category
                </label>
                <div className="flex flex-wrap gap-2 mb-3">
                  {variants.map((variant, vIndex) =>
                    variant.options.map((option, index) => (
                      <span
                        key={`${vIndex}-${index}`}
                        className="bg-blue-50 text-blue-700 px-3 py-1 rounded-full text-sm"
                      >
                        {option}
                      </span>
                    ))
                  )}

                  <Button
                    variant="outline"
                    size="sm"
                    className="border-gray-300 text-gray-700 rounded-full px-3 py-1 h-auto text-sm"
                    onClick={() => setIsAddVariantOpen(true)}
                  >
                    âž• Add new
                  </Button>
                </div>
              </div>
              <Button
                variant="ghost"
                className="text-gray-500 hover:bg-transparent hover:text-gray-700 p-0 h-auto font-normal"
              >
                <Plus className="h-4 w-4 mr-2" />
                Add Custom Field
              </Button>
            </div>
          </div>
        </div>
      )}
      <AddVariantDialog
        open={isAddVariantOpen}
        onOpenChange={setIsAddVariantOpen}
        initialVariants={variants}
        onSave={handleAddVariant}
      />
    </div>
  );
}
