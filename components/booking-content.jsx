"use client"

import { Search, Filter, ChevronDown } from "lucide-react"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { useRouter, useParams } from "next/navigation"
import DashboardDetails from "./dashboard-details"

export default function BookingContent() {
  const router = useRouter()
  const params = useParams()
  const providerId = params.id

  const stats = [
    {
      label: "Total Bookings",
      value: "1200",
      change: "+12",
      note:"vs last week",
      changeType: "positive",
    },
    {
      title: "Total Revenue",
      value: "$45,904",
      change: "+8%",
      note:"vs last week",
      changeType: "negative",
    },
    {
      title: "Money generated by the provider",
      value: "$145,674",
      change: "+12%",
      note:"vs last week",
      changeType: "negative",
    },
    {
      title: "Commission earned by Hanat",
      value: "$1200",
      change: "+12%",
      note:"vs last week",
      changeType: "positive",
    },
  ]

  const bookings = [
    {
      id: "ONE-Z2A3B4",
      type: "External",
      customer: { name: "Robert Fox", avatar: "/placeholder.svg?height=32&width=32" },
      service: "Personal Chef",
      resource: { name: "Wade Warren", avatar: "/placeholder.svg?height=32&width=32" },
      date: "Feb 2, 2024 19:28",
      status: "Pending",
    },
    {
      id: "ONE-Q3R4S5",
      type: "Hanat",
      customer: { name: "Eleanor Pena", avatar: "/placeholder.svg?height=32&width=32" },
      service: "Car Cleaning",
      resource: { name: "Jane Cooper", avatar: "/placeholder.svg?height=32&width=32" },
      date: "Dec 30, 2024 05:18",
      status: "Completed",
    },
    {
      id: "ONE-7G8H9I",
      type: "Hanat",
      customer: { name: "Wade Warren", avatar: "/placeholder.svg?height=32&width=32" },
      service: "Home Cleaning",
      resource: { name: "Devon Lane", avatar: "/placeholder.svg?height=32&width=32" },
      date: "Mar 20, 2024 23:14",
      status: "Cancelled",
    },
  ]

  const getStatusColor = (status) => {
    switch (status) {
      case "Pending":
        return "text-orange-600 bg-orange-50"
      case "Completed":
        return "text-green-600 bg-green-50"
      case "Cancelled":
        return "text-red-600 bg-red-50"
      default:
        return "text-gray-600 bg-gray-50"
    }
  }

  return (
    <div className="p-7">
      {/* Stats Section */}
        {/* Search and Filter */}
      <div className="flex items-center justify-between mb-6">
        <div className="relative w-[400px]">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
          <Input placeholder="Search" className="pl-10 border-gray-300" />
        </div>
        <div className="flex items-center space-x-3">
          <Button variant="outline" className="border-gray-300 text-gray-700">
            Weekly
            <ChevronDown className="ml-2 h-4 w-4" />
          </Button>
        </div>
      </div>
      <DashboardDetails stats={stats} />
      {/* Filter and Status */}
      <div className="flex items-center space-x-3 mb-6">
        <Button variant="outline" className="border-gray-300 text-gray-700">
          All Status
          <ChevronDown className="ml-2 h-4 w-4" />
        </Button>
        <Button variant="outline" className="border-gray-300 text-gray-700">
          <Filter className="mr-2 h-4 w-4" />
          Filter
        </Button>
      </div>

      {/* Bookings Table */}
      <div className="border border-gray-200 rounded-lg overflow-hidden">
        <table className="w-full">
          <thead className="bg-gray-50">
            <tr>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Booking ID
              </th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Customer name
              </th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Service
              </th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Resource
              </th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                Booking Date
              </th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
              <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
            </tr>
          </thead>
          <tbody className="bg-white divide-y divide-gray-200">
            {bookings.map((booking) => (
              <tr key={booking.id} className="hover:bg-gray-50">
                <td
                  className="px-4 py-4 text-sm font-medium text-blue-600 cursor-pointer hover:underline"
                  onClick={() => router.push(`/service-provider/${providerId}/booking/${booking.id}`)}
                >
                  {booking.id}
                </td>
                <td className="px-4 py-4 text-sm text-gray-900">{booking.type}</td>
                <td className="px-4 py-4">
                  <div className="flex items-center">
                    <img
                      src={booking.customer.avatar || "/placeholder.svg"}
                      alt={booking.customer.name}
                      className="w-8 h-8 rounded-full mr-3"
                    />
                    <span className="text-sm text-gray-900">{booking.customer.name}</span>
                  </div>
                </td>
                <td className="px-4 py-4 text-sm text-gray-900">{booking.service}</td>
                <td className="px-4 py-4">
                  <div className="flex items-center">
                    <img
                      src={booking.resource.avatar || "/placeholder.svg"}
                      alt={booking.resource.name}
                      className="w-8 h-8 rounded-full mr-3"
                    />
                    <span className="text-sm text-gray-900">{booking.resource.name}</span>
                  </div>
                </td>
                <td className="px-4 py-4 text-sm text-gray-900">{booking.date}</td>
                <td className="px-4 py-4">
                  <span
                    className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(booking.status)}`}
                  >
                    {booking.status}
                  </span>
                </td>
                <td className="px-4 py-4 text-sm text-gray-500">•••</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  )
}
